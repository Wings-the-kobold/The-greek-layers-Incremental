* {
	transition-duration: 1.5s;
	text-align: left;
	font-family: "Righteous";
	
	table-align: center;
	margin: auto;
	-webkit-text-size-adjust: none;
	text-size-adjust: none;

}

*:focus {
	outline: none;
	webkit-outline: none;
	transition-duration: 1.5s;
}

html, body {
	min-height: 100%;
	height: 100%;
	transition-duration: 1.5s;
}

td {
	padding: 0
}

.upgTable {
	display: flex !important;
	flex-flow: column wrap;
	justify-content: center;
	align-items: center;
	max-width: 100%;
	margin: 0 auto;
}

.upgRow {
	display: flex !important;
	flex-flow: row wrap;
	justify-content: center;
	align-items: center;
	max-width: 100%;
	margin: 0 auto;
}

.upgAlign {
	vertical-align: 0
}

.bigUpgAlign {
	vertical-align: 0
}

.treeThing {
	margin: 0 10px 0 10px;
	vertical-align: left;
}

.can.upg:hover {
	z-index: 2
}

.can.buyable:hover {
	z-index: 2
}

.back {
	position: absolute;
	top: 0;
	left: 0;
	background-color: transparent;
	border: 1px solid transparent;
	color: var(--color);
	font-size: 40px;
	cursor: pointer;
	transition-duration: 1.5s;
}

.other-back {
	position: absolute;
	top: 0;
	left: 60px;
	background-color: transparent;
	border: 1px solid transparent;
	color: var(--color);
	font-size: 60px;
	cursor: pointer;
}

.back:hover {
	transform: scale(1.1, 1.1);
	text-shadow: 0 0 7px var(--color);
}

.hidden {
	visibility: hidden;
	height: 50px !important;
}

.canvas {
	top: 0;
	left: 0;
	position: absolute;
	z-index: -999;
}

.left {
	position: absolute;
	left: 0;
	transition-duration: 1.5s;
}

.remove {
	height: 24px;
	width: 24px;
	cursor: pointer;
}

.remove:hover {
	transform: scale(1.1, 1.1);
}

.col {
	min-width: 49.5%;
	max-width: 49.5%;
	width: 49.5%;
	height: 100%;
	min-height: 100%;
	column-span: 1;
	position: absolute;
	overflow-y: auto;
	overflow-x: auto;
	transition-duration: 0s
}

.instant {
	transition-duration: 1s !important
}

.fast {
	transition:color none
}

.col.right {
	top: 0;
	right: 0;
}

#app {
	column-count: 2;
	column-width: 50%;
	min-height: 100%;
}

.vl2 {
	border-left: 3px solid var(--color);
	height: 100%;
}

ul {
	list-style-type: none;
}

.fullWidth {
	position: absolute;
	height: 100%;
	width: 100%;
	min-width: 100%;
	overflow-y: auto;
	overflow-x: auto;
	transition-duration: 1s
}

.tooltipBox { 
	position: relative;
  }
  
  .tooltipBox:hover .tooltip{
	opacity: 1;
  }

  .forceTooltip .tooltip{
	opacity: 1;
  }
  
.respecCheckbox {
	display: inline-block;
}


#loadingSection {
	display: flex;
	flex-direction: column;
	justify-content: center;
}

.treeOverlay {
	pointer-events:none;
	overflow:hidden;
}

.front {
	z-index: 30000
}

.overlayThing {
	z-index: 10000;
	pointer-events:auto;
}

.sideLayers {
	z-index: 10000;
	pointer-events:auto;
	position: absolute;
	right: 55px;
	top: 65px;
	background-color: transparent;
}

button > * {
	pointer-events:none;
	transition-duration: 1.5s;
}

.ghost {
	visibility: hidden
}

#treeTab td button {
    margin: 0 10px;
}

q.bg {
	z-index: -9000;
	width: 100%;
	height: 100%;
	position: absolute;
	background-color: transparent;
	top: 0
}

.bg2 {
	z-index: -9009;
	width: 100%;
	height: 100%;
	position: absolute;
	top: 0
}

.noBackground {
	background: transparent !important;
	background-image: none !important;
	--background: transparent !important;
}

.glitch {
	position: left;
	top: 50%;
	left: 50%;
	transform: translate(-50%,-50%);
	content: attr(data-text);


}

.glitch::before {
	position: left;
	top: 50%;
	left: 50%;
	transform: translate(-50%,-50%);

		left: 2px;
		

		clip: rect(44px, 450px, 56px, 0);

		animation: glitch1 1s infinite linear alternate-reverse;
	
	
	
	
}

.glitch::after {
	position: left;
	top: 50%;
	left: 50%;
	transform: translate(-50%,-50%);

	left: -2px;
		
	animation: glitch2 1s infinite linear alternate-reverse;
	}


/*.glitch:idle::before*/

@keyframes glitch1 {
	0% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
	5% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
	10% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
	15% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
	20% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
	25% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
	30% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
	40% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
	43% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
	47% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
	53% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
	65% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
	70% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
	80% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
	90% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
	100% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
}

@keyframes glitch2 {
	0% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
	5% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
	10% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
	15% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
	20% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
	25% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
	30% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
	40% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
	43% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
	47% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
	53% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
	65% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
	70% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
	80% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
	90% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
	100% {
		clip: rect(random(100)+px, 9999px, random(100)+px, 0);
	}
}